<?xml version="1.0"?>
<root>
  <windownamedef>
    <name>Chrome_Remote_Desktop</name>
    <regex>Chrome Remote Desktop</regex>
  </windownamedef>
  <windownamedef>
    <name>SshInATab</name>
    <regex>^[^-]+ - Secure Shell .*$</regex>
    <regex>^chrome-extension://okddffdblfhhnmhodogpojmfkjmhinfp/html/nassh.html.*$</regex>
  </windownamedef>
  <item>
    <name>For Emacs</name>
    <list>
      <item>
        <name>Swap Command_L and Option_L (Chrome Remote Desktop)</name>
        <identifier>private.app_crd_swap_commandL_optionL</identifier>
        <only>GOOGLE_CHROME</only>
        <windowname_only>Chrome_Remote_Desktop</windowname_only>
        <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
        <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
      </item>
      <item>
        <name>Fn+LeftClick to MiddleClick</name>
        <identifier>private.fnLeftclick2middleclick</identifier>
        <autogen>--PointingButtonToPointingButton-- PointingButton::LEFT, ModifierFlag::FN, PointingButton::MIDDLE</autogen>
      </item>
      <item>
        <name>Chrome SshInATab</name>
        <identifier>remap.app.chrome_sshinatab_disable_close</identifier>
        <only>GOOGLE_CHROME</only>
        <windowname_only>SshInATab</windowname_only>
        <autogen>--KeyToKey-- KeyCode::B, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::ESCAPE, KeyCode::B, ModifierFlag::SHIFT_L</autogen>
        <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::ESCAPE, KeyCode::C, ModifierFlag::SHIFT_L</autogen>
        <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L, KeyCode::ESCAPE, KeyCode::F, ModifierFlag::CONTROL_L</autogen>
        <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L, KeyCode::ESCAPE, KeyCode::D, ModifierFlag::CONTROL_L</autogen>
        <autogen>--KeyToKey-- KeyCode::N, ModifierFlag::COMMAND_L, KeyCode::ESCAPE, KeyCode::N</autogen>
        <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::COMMAND_L, KeyCode::ESCAPE, KeyCode::Q</autogen>
        <autogen>--KeyToKey-- KeyCode::T, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::ESCAPE, KeyCode::T, ModifierFlag::SHIFT_L</autogen>
        <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::COMMAND_L | ModifierFlag::NONE, KeyCode::ESCAPE, KeyCode::V</autogen>
        <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::COMMAND_L, KeyCode::ESCAPE, KeyCode::W</autogen>
      </item>
      <item>
	<name>Shift_R to Shift_R</name>
	<appendix>(+ When you type Shift_R only, send delete)</appendix>
	<identifier>remap.shiftR2shiftR_delete</identifier>
	<autogen>__KeyOverlaidModifier__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::DELETE</autogen>
      </item>
      <item>
        <name>Emacs C-SPACE fix</name>
        <identifier>remap.app_x11_emacs_nxfix</identifier>
        <only>X11</only>
        <autogen>--KeyToKey-- KeyCode::SPACE, ModifierFlag::COMMAND_L, KeyCode::SPACE, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L</autogen>
      </item>
      <item>
        <name>Emacs C-M-D fix</name>
        <identifier>remap.app_emacs_cmdfix</identifier>
        <only>EMACS</only>
        <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L, KeyCode::ESCAPE, KeyCode::D, ModifierFlag::CONTROL_L</autogen>
      </item>
      <item>
        <name>Resolve NX/Emacs conflict</name>
        <identifier>remap.app_x11_nxfix</identifier>
        <only>X11</only>
        <autogen>--KeyToKey-- KeyCode::B, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L, KeyCode::ESCAPE, KeyCode::B, ModifierFlag::CONTROL_L</autogen>
        <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L, KeyCode::ESCAPE, KeyCode::D, ModifierFlag::CONTROL_L</autogen>
        <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L, KeyCode::ESCAPE, KeyCode::E, ModifierFlag::CONTROL_L</autogen>
        <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L, KeyCode::ESCAPE, KeyCode::F, ModifierFlag::CONTROL_L</autogen>
        <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L, KeyCode::ESCAPE, KeyCode::Q, ModifierFlag::CONTROL_L</autogen>
        <autogen>--KeyToKey-- KeyCode::T, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L, KeyCode::ESCAPE, KeyCode::T, ModifierFlag::CONTROL_L</autogen>
        <autogen>--KeyToKey-- KeyCode::B, ModifierFlag::COMMAND_L, KeyCode::ESCAPE, KeyCode::B</autogen>
        <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::COMMAND_L, KeyCode::ESCAPE, KeyCode::C</autogen>
        <autogen>--KeyToKey-- KeyCode::H, ModifierFlag::COMMAND_L, KeyCode::ESCAPE, KeyCode::H</autogen>
        <autogen>--KeyToKey-- KeyCode::M, ModifierFlag::COMMAND_L, KeyCode::ESCAPE, KeyCode::M</autogen>
        <autogen>--KeyToKey-- KeyCode::N, ModifierFlag::COMMAND_L, KeyCode::ESCAPE, KeyCode::N</autogen>
        <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::COMMAND_L, KeyCode::ESCAPE, KeyCode::Q</autogen>
        <autogen>--KeyToKey-- KeyCode::R, ModifierFlag::COMMAND_L, KeyCode::ESCAPE, KeyCode::R</autogen>
        <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::COMMAND_L, KeyCode::ESCAPE, KeyCode::V</autogen>
        <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::COMMAND_L, KeyCode::ESCAPE, KeyCode::W</autogen>
      </item>
    </list>
  </item>
</root>
